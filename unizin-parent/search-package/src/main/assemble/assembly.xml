<project name="unizin-search-assembly"
         default="build"
         xmlns:nx="urn:nuxeo-build"
         xmlns:artifact="urn:nuxeo-artifact">
  <taskdef resource="org/nuxeo/build/antlib.xml" uri="urn:nuxeo-build" />
  <taskdef resource="org/nuxeo/build/artifact/antlib.xml" uri="urn:nuxeo-artifact" />
  <taskdef resource="net/sf/antcontrib/antlib.xml" />


  <target name="build" description="Build Nuxeo sample Marketplace package">
    <property name="outdir" value="${maven.project.build.directory}" />
    <!-- Include your artifacts in the graph adding your groupId to groupPrefixes -->
    <artifact:nuxeo-expand includeTestScope="true" groupPrefixes="org.nuxeo,org.unizin" />
    <!-- Prints the graph for debugging purpose -->
    <artifact:print output="${outdir}/dependency-tree.log" />
    <tstamp />

    <delete failonerror="false" dir="${outdir}/marketplace" />
    <mkdir dir="${outdir}/marketplace" />
    <copy todir="${outdir}/marketplace">
      <fileset dir="src/main/resources" />
      <filterset>
        <filter token="VERSION" value="${maven.project.version}" />
        <filter token="DISTRIB_VERSION" value="${nuxeo.distribution.version}" />
      </filterset>
    </copy>

    <!-- Nuxeo bundles -->
    <copy todir="${outdir}/marketplace/install/bundles" overwrite="true">
      <artifact:set>
        <includes>
          <artifact groupId="org.nuxeo*" scope="!test" type="!pom" />
          <!-- Include your artifacts using their groupId for instance -->
          <artifact groupId="org.unizin*" scope="!test" type="!pom" />
        </includes>
        <excludes>
          <artifact groupId="org.nuxeo.lib*" />
        </excludes>
      </artifact:set>
    </copy>
    <!-- Third-party libraries -->
    <copy todir="${outdir}/marketplace/install/lib" overwrite="true">
      <artifact:set>
        <includes>
          <artifact groupId="!org.nuxeo*" scope="!test" />
          <artifact groupId="org.nuxeo.lib*" scope="!test" />
        </includes>
        <excludes>
          <!-- Filter out your artifacts using their groupId for instance -->
          <artifact groupId="org.unizin*" />

          <!-- these have Tomcat classloader weirdness - Steve Huwig-->
          <artifact groupId="org.slf4j" artifactId="slf4j-api" />
          <artifact groupId="commons-lang" artifactId="commons-lang"/>
          <artifact groupId="org.freemarker" artifactId="freemarker"/>
          <artifact groupId="xerces" artifactId="xercesImpl"/>
          <artifact groupId="xml-apis" artifactId="xml-apis"/>
          <artifact groupId="org.apache.commons" artifactId="commons-lang3"/>
          <artifact groupId="javax.servlet.jsp" artifactId="jsp-api"/>
          <artifact groupId="javax.el" artifactId="el-api"/>
          <artifact groupId="commons-logging" artifactId="commons-logging"/>
        </excludes>
      </artifact:set>
    </copy>
    <nx:rmdups dir="${outdir}/marketplace/install/lib" />

    <var name="install.bundles" value="" />
    <if>
      <available file="${outdir}/marketplace/install/bundles" />
      <then>
        <var name="install.bundles"
             value="${line.separator}
  &lt;update file=&quot;${package.root}/install/bundles&quot; todir=&quot;${env.bundles}&quot; /&gt;" />
      </then>
    </if>

    <var name="install.libs" value="" />
    <if>
      <available file="${outdir}/marketplace/install/lib" />
      <then>

        <var name="install.libs"
             value="${line.separator}
  &lt;update file=&quot;${package.root}/install/lib&quot; todir=&quot;${env.lib}&quot; /&gt;" />
      </then>
    </if>

    <var name="install.properties"
         value=""/>
    <var name="install.templates" value="" />
    <if>
      <available file="${outdir}/marketplace/install/templates" />
      <then>
        <var name="install.templates"
             value="${line.separator}
  &lt;copy dir=&quot;${package.root}/install/templates&quot; todir=&quot;${env.templates}&quot; overwrite=&quot;true&quot; /&gt;${line.separator}
  &lt;config addtemplate=&quot;cmp-search&quot; /&gt;${line.separator}" />
      </then>
    </if>

    <copy file="src/main/resources/install.xml" todir="${outdir}/marketplace" overwrite="true">
      <filterset>
        <filter token="BUNDLES" value="${install.bundles}" />
        <filter token="LIBS" value="${install.libs}" />
        <filter token="PROPERTIES" value="${install.properties}" />
        <filter token="TEMPLATES" value="${install.templates}" />
      </filterset>
    </copy>

    <zip destfile="${outdir}/${maven.project.artifactId}-${maven.project.version}.zip"
         basedir="${outdir}/marketplace" />
    <artifact:attach file="${outdir}/${maven.project.artifactId}-${maven.project.version}.zip" type="zip" />
  </target>

</project>
